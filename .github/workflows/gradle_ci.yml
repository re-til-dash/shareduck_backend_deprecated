# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
    types:
      - closed


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test


      - name: Transfer JAR to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem
          scp -i ec2_key.pem -o StrictHostKeyChecking=no ./build/libs/shareduck.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/

        # EC2 인스턴스에서 JAR 실행 (서버종료대기시간10여초임)
      - name: Deploy and Run JAR on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no  ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "\
            cd /home/${{ secrets.EC2_USERNAME }} && \
            bash stop_server.sh && \
            bash start_server.sh"

      - name: Clean up SSH key
        run: rm ec2_key.pem

